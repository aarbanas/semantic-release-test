name: Semantic Release

on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: environment to deploy to
        required: true
      ref:
        type: string
        description: Git ref to checkout
        required: false
        default: ${{ github.sha }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # To create tags and releases
    steps:
      - name: Checkout to source branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0

      # 2. Run Nyx to publish the release (tag + GitHub Release)
      - name: Create GitHub release via Nyx
        id: nyx
        uses: mooltiverse/nyx@main
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # provides GitHub API access for tagging and releases
        with:
          command: publish
          # (No changelogPath => no CHANGELOG.md will be written:contentReference[oaicite:3]{index=3})
          # (Other inputs like preset, bump, etc. can be set here if needed)

      # 3. Extract the generated release notes from the new GitHub Release
      - name: Fetch release notes
        id: notes
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = '${{ steps.nyx.outputs.version }}';
            const release = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tag
            });
            core.setOutput("release_notes", release.data.body || "");
