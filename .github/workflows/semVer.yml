name: Semantic Release

on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: environment to deploy to
        required: true
      ref:
        type: string
        description: git ref to checkout
        required: false
        default: ${{ github.sha }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # To create tags and releases
    steps:
      - name: Checkout to specific commit
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }} # Uses the input SHA
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"

      - name: Create temporary local release branch
        id: temp_branch
        run: |
          TEMP_BRANCH_NAME="refs/heads/temprelease/${{ inputs.ref }}"
          git checkout -b "$TEMP_BRANCH_NAME"
          echo "branch_name=$TEMP_BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "Current branch is $(git rev-parse --abbrev-ref HEAD)"

      - name: Install dependencies
        run: yarn

      - run: npx semantic-release --branches main --no-ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CONFLUENCE_USERNAME: ${{ secrets.CONFLUENCE_USERNAME }}
          CONFLUENCE_API_TOKEN: ${{ secrets.CONFLUENCE_API_TOKEN }}
          CONFLUENCE_URL: ${{ secrets.CONFLUENCE_URL }}
          CONFLUENCE_PARENT_PAGE_ID: ${{ secrets.CONFLUENCE_PARENT_PAGE_ID }}

      - name: Clean up temporary branch (optional but good practice)
        if: always() # Run even if semantic-release fails, to ensure cleanup
        run: |
          echo "Switching back to the original source branch ref locally (detached HEAD)"
          # Switch to the original commit (which is also the tip of source_branch if that was the input)
          # or switch to the actual source branch head if you want to ensure it's clean.
          # For simplicity, just checking out the original commit SHA is fine.
          git checkout ${{ github.event.inputs.commit_sha }}
            
          TEMP_BRANCH_NAME="temprelease/${{ github.event.inputs.commit_sha }}"
          echo "Deleting local temporary branch $TEMP_BRANCH_NAME"
          git branch -D "$TEMP_BRANCH_NAME"
          echo "Local branches:"
          git branch
